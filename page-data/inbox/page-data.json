{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/inbox","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"inbox\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Inbox\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Here you can write disorganised notes to be categorised later\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Bullet points are useful, but it could be free form text as well\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Sometimes it's better to just get things off your mind quickly, rather than stop to think where it belongs\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"But don't let this list get too long\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Move information to more specific documents and link to them.\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"This helps you navigate between documents quickly\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"For example, you can \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Cmd\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Click\"), \" this: [\", mdx(\"a\", {\n    \"href\": \"todo\",\n    \"title\": \"Todo\",\n    \"parentName\": \"li\"\n  }, \"todo\"), \"]\"))), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Some notes don't end up making sense the next day\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"That's ok, you can just delete them!\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"You can always find them in your git history, if you really need it!\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Todo\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This is an example of a todo list item that's complete\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"Todo lists are useful for keeping organised and focused\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This one is not completed yet\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"You can mark it completed by pressing \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Option\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"C\"), \" (or \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Alt\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"C\"), \") when your cursor is on this line\", mdx(\"ul\", {\n    \"className\": \"contains-task-list\",\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"You can also select multiple lines and mark them all at once!\"))), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"When you press enter at the end of a line, it adds a new todo item on the next line\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This, and more is provided by the \", mdx(\"a\", {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\",\n    \"parentName\": \"li\"\n  }, \"Markdown All in One\"), \" plugin by \", mdx(\"a\", {\n    \"href\": \"https://github.com/yzhang-gh\",\n    \"parentName\": \"li\"\n  }, \"Yu Zhang\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9052dd70-ead9-5663-96cb-f751b76dca29","fields":{"slug":"/todo","title":"Todo"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"foam\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Foam\"), mdx(\"p\", null, \"\\uD83D\\uDC4B Welcome to your new Foam Workspace!\"), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Getting started\"), mdx(\"p\", null, \"This documentation assumes that you have a GitHub account and have \", mdx(\"a\", {\n    \"href\": \"https://code.visualstudio.com/\",\n    \"parentName\": \"p\"\n  }, \"Visual Studio Code\"), \" installed on your Linux/MacOS/Windows machine.\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"If you haven't yet, browse over to the main \", mdx(\"a\", {\n    \"href\": \"https://foambubble.github.io/foam\",\n    \"parentName\": \"li\"\n  }, \"Foam documentation workspace\"), \" to get an idea of what Foam is and how to use it.\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"Press \\\"Use this template\\\" button at \", mdx(\"a\", {\n    \"href\": \"https://github.com/mathieudutour/foam-gatsby-template/generate\",\n    \"parentName\": \"li\"\n  }, \"foam-gatsby-template\"), \" (that's this repository!) to fork it to your own GitHub account. If you want to keep your thoughts to yourself, remember to set the repository private.\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, mdx(\"a\", {\n    \"href\": \"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository\",\n    \"parentName\": \"li\"\n  }, \"Clone the repository to your local machine\"), \" and open it in VS Code.\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"When prompted to install recommended extensions, click \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"Install all\"), \" (or \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"Show Recommendations\"), \" if you want to review and install them one by one)\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"Open \", mdx(\"a\", {\n    \"href\": \"_layouts/gatsby-config.js\",\n    \"parentName\": \"li\"\n  }, \"_layouts/gatsby-config.js\"), \" and edit the \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"pathPrefix\"), \" to be the name of the repository.\")), mdx(\"p\", null, \"After setting up the repository, open \", mdx(\"a\", {\n    \"href\": \".vscode/settings.json\",\n    \"parentName\": \"p\"\n  }, \".vscode/settings.json\"), \" and edit, add or remove any settings you'd like for your Foam workspace.\"), mdx(\"p\", null, \"To learn more about how to use \", mdx(\"strong\", {\n    \"parentName\": \"p\"\n  }, \"Foam\"), \", read the \", mdx(\"a\", {\n    \"href\": \"https://foambubble.github.io/foam/recipes\",\n    \"parentName\": \"p\"\n  }, \"Recipes\"), \" bubbles of the Foam documentation workspace.\"), mdx(\"h2\", {\n    \"id\": \"using-foam\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Using Foam\"), mdx(\"p\", null, \"We've created a few Bubbles (markdown documents) to get you started.\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"inbox\",\n    \"title\": \"Inbox\",\n    \"parentName\": \"li\"\n  }, \"inbox\"), \"] - a place to write down quick notes to be categorised later\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"foam-tips\",\n    \"title\": \"Foam tips\",\n    \"parentName\": \"li\"\n  }, \"foam-tips\"), \"] - tips to get the most out of your Foam workspace\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"todo\",\n    \"title\": \"Todo\",\n    \"parentName\": \"li\"\n  }, \"todo\"), \"] - a place to keep track of things to do\")), mdx(\"h2\", {\n    \"id\": \"note-on-wiki-links\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Note on \", mdx(\"inlineCode\", {\n    \"parentName\": \"h2\"\n  }, \"[[wiki-links]]\")), mdx(\"p\", null, \"\\u26A0\\uFE0F Until \", mdx(\"a\", {\n    \"href\": \"https://github.com/foambubble/foam/issues/16\",\n    \"parentName\": \"p\"\n  }, \"foambubble/foam#16\"), \" is resolved, \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"[[wiki-links]]\"), \" links (like the links above) won't work in the GitHub Markdown preview (i.e. this Readme on github.com).\"), mdx(\"p\", null, \"They should work as expected in VS Code, and in rendered GitHub Pages.\"), mdx(\"p\", null, \"If GitHub preview (or general 100% support with all Markdown tools) is a requirement, for the time being you can use the standard \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"[description](page.md)\"), \" syntax.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"133ccd81-2ad8-5339-b154-24018d77bd5b","fields":{"slug":"/readme","title":"Foam"}}}]},"fields":{"slug":"/inbox","title":"Inbox"}}},"pageContext":{"id":"1f839313-a082-57d7-9557-218ec9c2d06e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}